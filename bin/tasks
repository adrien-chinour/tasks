#!/usr/bin/env php
<?php

set_time_limit(0);

require __DIR__ . '/vendor/autoload.php';

use App\Command\AddCommand;
use App\Command\CheckCommand;
use App\Command\ListCommand;
use App\Command\RemoveCommand;
use App\Command\UpdateCommand;
use App\Database\DatabaseAdaptor;
use App\Database\TaskRepository;
use Symfony\Component\Console\Application;

$application = new Application('Todo Commands Application', '1.0');

const DATABASE = 'var/tasks.sqlite';

// connection to database
try {
    $sqlite = __DIR__ . DATABASE;
    $table = null;

    if (!file_exists($sqlite)) {
        $table = 'CREATE TABLE tasks(id INTEGER PRIMARY KEY NOT NULL, name TEXT, category TEXT, completed BOOLEAN)';
    }

    $pdo = new PDO('sqlite:' . DATABASE);
    $pdo->setAttribute(PDO::ATTR_DEFAULT_FETCH_MODE, PDO::FETCH_ASSOC);
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
    if ($table !== null) {
        $pdo->prepare($table)->execute();
    }
} catch (Exception $exception) {
    echo $exception->getMessage();
    exit(1);
}
$adapter = new DatabaseAdaptor($pdo);
$taskRepository = new TaskRepository($adapter);

// task CRUD commands
$application->add(new AddCommand($taskRepository));
$application->add(new ListCommand($taskRepository));
$application->add(new CheckCommand($taskRepository));
$application->add(new RemoveCommand($taskRepository));
$application->add(new UpdateCommand($taskRepository));

$application->run();
